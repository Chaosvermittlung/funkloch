package db100

const createSQLlitestmt = `
--
-- File generated with SQLiteStudio v3.0.7 on Mi. Nov. 1 14:37:21 2017
--
-- Text encoding used: UTF-8
--
PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

-- Table: Packinglist
CREATE TABLE Packinglist (packinglistid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, name VARCHAR NOT NULL, eventid INTEGER REFERENCES Event (eventid) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL);

-- Table: Equipment
CREATE TABLE Equipment (equipmentid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, name VARCHAR NOT NULL);

-- Table: Store
CREATE TABLE Store (storeid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, name VARCHAR NOT NULL, adress TEXT NOT NULL, manager INTEGER NOT NULL REFERENCES User (userid) ON DELETE CASCADE ON UPDATE CASCADE);

-- Table: Wishlist
CREATE TABLE Wishlist (wishlistid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, name STRING NOT NULL);

-- Table: Packinglistitem
CREATE TABLE Packinglistitem (packinglistid INTEGER REFERENCES Packinglist (packinglistid) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, storeitemid INTEGER REFERENCES Store ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, PRIMARY KEY (packinglistid, storeitemid));

-- Table: Fault
CREATE TABLE Fault (faultid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, storeitemid INTEGER REFERENCES Storeitem (storeitemid) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, status INTEGER NOT NULL DEFAULT (0), comment TEXT);

-- Table: Wishlistitem
CREATE TABLE Wishlistitem (wishlistid INTEGER REFERENCES Wishlist (wishlistid) ON DELETE CASCADE ON UPDATE CASCADE, equipmentid INTEGER REFERENCES Equipment (equipmentid) ON DELETE CASCADE ON UPDATE CASCADE, count INTEGER NOT NULL DEFAULT (1), PRIMARY KEY (wishlistid, equipmentid));

-- Table: Participant
CREATE TABLE Participant (userid INTEGER NOT NULL REFERENCES User (userid) ON DELETE CASCADE ON UPDATE CASCADE, eventid INTEGER NOT NULL REFERENCES Event (eventid) ON DELETE CASCADE ON UPDATE CASCADE, arrival DATETIME NOT NULL, departure DATETIME NOT NULL, PRIMARY KEY (userid, eventid));

-- Table: User
CREATE TABLE User (userid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, username VARCHAR NOT NULL, email VARCHAR NOT NULL, password VARCHAR NOT NULL, salt VARCHAR NOT NULL, "right" INTEGER NOT NULL);

-- Table: Storeitem
CREATE TABLE Storeitem (storeitemid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, equipmentid INTEGER REFERENCES Equipment (equipmentid) ON DELETE CASCADE ON UPDATE CASCADE, storeid INTEGER REFERENCES Store (storeid) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, code INTEGER (13) NOT NULL);

-- Table: Event
CREATE TABLE Event (eventid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, name VARCHAR NOT NULL, start DATETIME NOT NULL, "end" DATETIME NOT NULL, adress TEXT);

COMMIT TRANSACTION;
PRAGMA foreign_keys = on;


`
