package db100

const createSQLlitestmt = `
--
-- File generated with SQLiteStudio v3.0.7 on Mo. Aug. 1 21:20:13 2016
--
-- Text encoding used: UTF-8
--
PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

-- Table: Wishlist
CREATE TABLE Wishlist (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Name STRING NOT NULL);

-- Table: Participant
CREATE TABLE Participant (User_ID INTEGER NOT NULL REFERENCES User (ID) ON DELETE CASCADE ON UPDATE CASCADE, Event_ID INTEGER NOT NULL REFERENCES Event (ID) ON DELETE CASCADE ON UPDATE CASCADE, Arrival DATE NOT NULL, Depature DATE NOT NULL, PRIMARY KEY (User_ID, Event_ID));

-- Table: User
CREATE TABLE User (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Username VARCHAR NOT NULL, EMail VARCHAR NOT NULL, Password VARCHAR NOT NULL, Salt VARCHAR NOT NULL, "Right" INTEGER NOT NULL);

-- Table: Wishlistitem
CREATE TABLE Wishlistitem (Wishlist_ID INTEGER, Equipment_ID INTEGER, PRIMARY KEY (Wishlist_ID, Equipment_ID));

-- Table: Event
CREATE TABLE Event (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Name VARCHAR NOT NULL, Start DATE NOT NULL, "End" DATE NOT NULL, Adress TEXT);

-- Table: Equipment
CREATE TABLE Equipment (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Name VARCHAR NOT NULL);

-- Table: Packinglistitem
CREATE TABLE Packinglistitem (Packinglist_ID INTEGER REFERENCES Packinglist (ID) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, Stockitem_ID INTEGER REFERENCES Storeitem (ID) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, PRIMARY KEY (Packinglist_ID, Stockitem_ID));

-- Table: Packinglist
CREATE TABLE Packinglist (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Name VARCHAR NOT NULL, Event_ID INTEGER REFERENCES Event (ID) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL);

-- Table: Store
CREATE TABLE Store (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Name VARCHAR NOT NULL, Adress TEXT NOT NULL, Manager INTEGER NOT NULL REFERENCES User (ID) ON DELETE CASCADE ON UPDATE CASCADE);

-- Table: Storeitem
CREATE TABLE Storeitem (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Equipment_ID INTEGER REFERENCES Equipment (ID) ON DELETE CASCADE ON UPDATE CASCADE, Store_ID INTEGER REFERENCES Store (ID) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL);

COMMIT TRANSACTION;
PRAGMA foreign_keys = on;
`
