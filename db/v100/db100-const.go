package db100

const createSQLlitestmt = `
--
-- File generated with SQLiteStudio v3.0.7 on Mi. Nov. 2 10:58:56 2016
--
-- Text encoding used: UTF-8
--
PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

-- Table: Storeitem
CREATE TABLE Storeitem (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, EquipmentID INTEGER REFERENCES Equipment (ID) ON DELETE CASCADE ON UPDATE CASCADE, StoreID INTEGER REFERENCES Store (ID) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL);

-- Table: Packinglist
CREATE TABLE Packinglist (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Name VARCHAR NOT NULL, EventID INTEGER REFERENCES Event (ID) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL);

-- Table: Packinglistitem
CREATE TABLE Packinglistitem (PackinglistID INTEGER REFERENCES Event (ID) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, StoreitemID INTEGER REFERENCES Storeitem (ID) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, PRIMARY KEY (PackinglistID, StoreitemID));

-- Table: Wishlistitem
CREATE TABLE Wishlistitem (WishlistID INTEGER, EquipmentID INTEGER, Count INTEGER NOT NULL DEFAULT (1), PRIMARY KEY (WishlistID, EquipmentID));

-- Table: Participant
CREATE TABLE Participant (UserID INTEGER NOT NULL REFERENCES User (ID) ON DELETE CASCADE ON UPDATE CASCADE, EventID INTEGER NOT NULL REFERENCES Event (ID) ON DELETE CASCADE ON UPDATE CASCADE, Arrival DATETIME NOT NULL, Depature DATETIME NOT NULL, PRIMARY KEY (UserID, EventID));

-- Table: Event
CREATE TABLE Event (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Name VARCHAR NOT NULL, Start DATETIME NOT NULL, "End" DATETIME NOT NULL, Adress TEXT);

-- Table: Equipment
CREATE TABLE Equipment (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Name VARCHAR NOT NULL);

-- Table: Store
CREATE TABLE Store (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Name VARCHAR NOT NULL, Adress TEXT NOT NULL, Manager INTEGER NOT NULL REFERENCES User (ID) ON DELETE CASCADE ON UPDATE CASCADE);

-- Table: User
CREATE TABLE User (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Username VARCHAR NOT NULL, EMail VARCHAR NOT NULL, Password VARCHAR NOT NULL, Salt VARCHAR NOT NULL, "Right" INTEGER NOT NULL);

-- Table: Wishlist
CREATE TABLE Wishlist (ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Name STRING NOT NULL);

COMMIT TRANSACTION;
PRAGMA foreign_keys = on;
`
